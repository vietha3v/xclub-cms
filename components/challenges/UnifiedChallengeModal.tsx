'use client';

import React, { useState } from 'react';
import { ChallengeCategory } from '@/types/challenge';
import Modal from '@/components/common/Modal';
import CreateIndividualChallengeModal from './CreateIndividualChallengeModal';
import CreateTeamChallengeModal from './CreateTeamChallengeModal';
import { X, Plus } from 'lucide-react';

interface UnifiedChallengeModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSuccess?: (challenge: unknown) => void;
  clubId?: string; // Optional - c√≥ khi t·∫°o t·ª´ club manager, kh√¥ng c√≥ khi t·∫°o t·ª´ trang challenges
}

export default function UnifiedChallengeModal({ 
  isOpen, 
  onClose, 
  onSuccess, 
  clubId 
}: UnifiedChallengeModalProps) {
  const [selectedCategory, setSelectedCategory] = useState<ChallengeCategory | null>(null);

  const handleCategorySelect = (category: ChallengeCategory) => {
    setSelectedCategory(category);
  };

  const handleClose = () => {
    setSelectedCategory(null);
    onClose();
  };

  const handleSuccess = (challenge: unknown) => {
    setSelectedCategory(null);
    onSuccess?.(challenge);
  };

  // N·∫øu ƒë√£ ch·ªçn lo·∫°i th·ª≠ th√°ch, hi·ªÉn th·ªã modal t∆∞∆°ng ·ª©ng
  if (selectedCategory === ChallengeCategory.INDIVIDUAL) {
    return (
      <CreateIndividualChallengeModal
        isOpen={isOpen}
        onClose={handleClose}
        onSuccess={handleSuccess}
      />
    );
  }

  if (selectedCategory === ChallengeCategory.TEAM) {
    return (
      <CreateTeamChallengeModal
        isOpen={isOpen}
        onClose={handleClose}
        onSuccess={handleSuccess}
        clubId={clubId}
      />
    );
  }

  // Footer v·ªõi 2 n√∫t action
  const footer = (
    <div className="flex justify-end items-center gap-3 p-6 bg-base-200">
      <button
        type="button"
        onClick={handleClose}
        className="btn btn-ghost btn-sm"
      >
        <X className="w-4 h-4 mr-1" />
        H·ªßy
      </button>
      
      <button
        type="button"
        onClick={handleClose}
        className="btn btn-primary btn-sm"
        disabled
      >
        <Plus className="w-4 h-4 mr-1" />
        Ti·∫øp t·ª•c
      </button>
    </div>
  );

  // B∆∞·ªõc 1: Ch·ªçn lo·∫°i th·ª≠ th√°ch (k·∫ø th·ª´a t·ª´ club manager)
  return (
    <Modal
      isOpen={isOpen}
      onClose={handleClose}
      title="T·∫°o th·ª≠ th√°ch m·ªõi"
      size="lg"
      footer={footer}
    >
      <div className="space-y-6 m-auto justify-center items-center">

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 m-4">
          {/* Th·ª≠ th√°ch c√° nh√¢n */}
          <div 
            className="card bg-base-100 shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer hover:scale-105"
            onClick={() => handleCategorySelect(ChallengeCategory.INDIVIDUAL)}
          >
            <div className="card-body text-center p-8">
              <div className="text-6xl mb-4">üèÉ‚Äç‚ôÇÔ∏è</div>
              <h3 className="text-2xl font-bold mb-3">Th·ª≠ th√°ch c√° nh√¢n</h3>
              <p className="text-base-content/70 mb-4">
                Th·ª≠ th√°ch d√†nh cho t·ª´ng th√†nh vi√™n ri√™ng l·∫ª, ph√π h·ª£p cho c√°c m·ª•c ti√™u c√° nh√¢n nh∆∞ ch·∫°y b·ªô, t·∫≠p luy·ªán h√†ng ng√†y.
              </p>
              <div className="flex items-center justify-center gap-2 text-primary">
                <span className="text-2xl">üë§</span>
                <span className="font-medium">C√° nh√¢n</span>
              </div>
            </div>
          </div>

          {/* Th·ª≠ th√°ch ƒë·ªìng ƒë·ªôi */}
          <div 
            className="card bg-base-100 shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer hover:scale-105"
            onClick={() => handleCategorySelect(ChallengeCategory.TEAM)}
          >
            <div className="card-body text-center p-8">
              <div className="text-6xl mb-4">üë•</div>
              <h3 className="text-2xl font-bold mb-3">Th·ª≠ th√°ch t·∫≠p th·ªÉ</h3>
              <p className="text-base-content/70 mb-4">
                Th·ª≠ th√°ch d√†nh cho c√°c CLB, t√≠nh t·ªïng th√†nh t√≠ch c·ªßa t·∫•t c·∫£ th√†nh vi√™n tham gia.
              </p>
              <div className="flex items-center justify-center gap-2 text-primary">
                <span className="text-2xl">üë•</span>
                <span className="font-medium">T·∫≠p th·ªÉ</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Modal>
  );
}
